---
layout      : 'default'
css         : ''
element     : 'search'
elementType : 'module'

title       : 'Search'
description : 'A search module allows a user to query for results from a selection of data'
type        : 'UI Module'

status      : 'Undocumented'
---

<link rel="stylesheet/less" type="text/css" href="/src/definitions/modules/search.less" />
<script src="/javascript/search.js"></script>

<%- @partial('header', { tabs: 'module' }) %>

<div class="main container">

  <div class="ui active tab" data-tab="definition">

    <h2 class="ui dividing header">Types</h2>

    <div class="example">
      <h4 class="ui header">Category</h4>
      <p>A search can display results ordered by categories</p>
      <div class="ui search">
        <input class="prompt" type="text" placeholder="Search">
        <div class="results"></div>
      </div>
    </div>

    <div class="another example">
      <div class="ui search">
        <div class="ui icon input">
          <input class="prompt" type="text" placeholder="Search">
          <i class="search icon"></i>
        </div>
        <div class="results"></div>
      </div>
    </div>

  </div>

  <div class="ui tab" data-tab="examples">

    <h2 class="ui dividing header">Examples</h2>

  </div>
  <div class="ui tab" data-tab="usage">

    <h2 class="ui dividing header">Initializing</h2>

    <h2 class="ui dividing header">Behaviors</h2>



  </div>

  <div class="ui tab" data-tab="settings">
    <h2 class="ui dividing header">
      Search
    </h2>

    <h4 class="ui header">
      Behavior
    </h4>
    <table class="ui sortable celled definition table">
      <thead>
        <th class="three wide"></th>
        <th class="three wide">Default</th>
        <th>Description</th>
      </thead>
      <tbody>
        <tr>
          <td>apiSettings</td>
          <td>
          <div class="code">
          {
            action: 'search'
          }
          </div>
          </td>
          <td>Settings for <a href="/behaviors/api.html">API</a> call.</td>
        </tr>
        <tr>
          <td>minCharacters</td>
          <td>2</td>
          <td>Minimum characters to query for results</td>
        </tr>
        <tr>
          <td>transition</td>
          <td>
            Transition
          </td>
          <td>Named transition to use when animating menu in and out. Fade and slide down are available without including <a href="/modules/transition.html">ui transitions</a></td>
        </tr>
        <tr>
          <td>duration</td>
          <td>
            300
          </td>
          <td>Duration of animation events</td>
        </tr>
        <tr>
          <td>easing</td>
          <td>
            easeOutExpo
          </td>
          <td>Easing equation when using fallback javascript animation</td>
        </tr>
        <tr>
          <td>maxResults</td>
          <td>7</td>
          <td>Maximum results to display when using local and simple search, maximum category count for category search</td>
        </tr>
        <tr>
          <td>cache</td>
          <td>true</td>
          <td>Caches results locally to avoid requerying server</td>
        </tr>
        <tr>
          <td>source</td>
          <td>false</td>
          <td>Specify a javascript object which will be searched</td>
        </tr>
        <tr>
          <td>searchFields</td>
          <td>
            <div class="code" data-type="javascript">
              [
                'title',
                'description'
              ]
            </div>
          </td>
          <td>Specify object properties inside source object which will be searched</td>
        </tr>
        <tr>
          <td>hideDelay</td>
          <td>300</td>
          <td>Delay before hiding results after search blur</code></td>
        </tr>
        <tr>
          <td>searchDelay</td>
          <td>300</td>
          <td>Delay before showing results on inputchange</td>
        </tr>
      </tbody>
    </table>

    <h4 class="ui header">
      Callbacks
    </h4>

    <table class="ui sortable celled definition table">
      <thead>
        <th class="three wide"></th>
        <th class="three wide">Context</th>
        <th>Description</th>
      </thead>
      <tbody>
        <tr>
          <td>onSelect</td>
          <td>module</td>
          <td>Callback on element selection by user (overrides default action)</td>
        </tr>
        <tr>
          <td>onResultsAdd(html)</td>
          <td>module</td>
          <td>Callback after processing element template to add html to results (overrides default action)</td>
        </tr>
        <tr>
          <td>onSearchQuery</td>
          <td>module</td>
          <td>Callback on search query</td>
        </tr>
        <tr>
          <td>onResults(response)</td>
          <td>module</td>
          <td>Callback on server response</td>
        </tr>
        <tr>
          <td>onResultsOpen</td>
          <td>results element</td>
          <td>Callback when results are opened</td>
        </tr>
        <tr>
          <td>onResultsClose</td>
          <td>results element</td>
          <td>Callback when results are closed</td>
        </tr>
      </tbody>
    </table>

    <h2 class="ui dividing header">
      Module
    </h2>

    <p>These settings are native to all modules, and define how the component ties content to DOM attributes, and debugging settings for the module.</p>

    <table class="ui sortable celled definition table">
      <thead>
        <th></th>
        <th class="six wide">Default</th>
        <th>Description</th>
      </thead>
      <tbody>
        <tr>
          <td>name</td>
          <td>Search</td>
          <td>Name used in log statements</td>
        </tr>
        <tr>
          <td>namespace</td>
          <td>search</td>
          <td>Event namespace. Makes sure module teardown does not effect other events attached to an element.</td>
        </tr>
        <tr>
          <td>selector</td>
          <td>
            <div class="code" data-type="css">
            selector : {
              prompt       : '.prompt',
              searchButton : '.search.button',
              results      : '.results',
              category     : '.category',
              result       : '.result'
            }
            </div>
          </td>
          <td>Selectors used to find parts of a module</td>
        </tr>
        <tr>
          <td>className</td>
          <td>
            <div class="code">
            className: {
              active  : 'active',
              down    : 'down',
              focus   : 'focus',
              empty   : 'empty',
              loading : 'loading'
            }
            </div>
          </td>
          <td>Class names used to determine element state</td>
        </tr>
        <tr>
          <td>debug</td>
          <td>false</td>
          <td>Debug output to console</td>
        </tr>
        <tr>
          <td>performance</td>
          <td>false</td>
          <td>Show <code>console.table</code> output with performance metrics</td>
        </tr>
        <tr>
          <td>verbose</td>
          <td>false</td>
          <td>Debug output includes all internal behaviors</td>
        </tr>
        <tr>
          <td>errors</td>
          <td colspan="2">
            <div class="code">
            error : {
              source      : 'No source or api action specified',
              noResults   : 'Your search returned no results',
              logging     : 'Error in debug logging, exiting.',
              noTemplate  : 'A valid template name was not specified.',
              serverError : 'There was an issue with querying the server.',
              method      : 'The method you called is not defined.'
            }
            </div>
          </td>
        </tr>
      </tbody>
    </table>
  </div>
</div>