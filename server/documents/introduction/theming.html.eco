---
layout      : 'default'
css         : 'theming'
standalone  : true

title       : 'Theming'
description : 'An introduction to theming'
type        : 'Introduction'
---

<%- @partial('header') %>

<script src="/javascript/theming.js"></script>

<link rel="stylesheet/less" type="text/css" href="/src/definitions/globals/site.less" />
<link rel="stylesheet/less" type="text/css" href="/src/definitions/elements/button.less" />

<div class="main ui intro container">

  <h2 class="ui dividing header">
    Progressive Truthfulness
  </h2>
  <blockquote>
    <p>[Progressive truthfulness] is perhaps a better way to build models of physical objects...Start with a model that is fully detailed but only resembles what is wanted. Then, one adjusts one attribute after another, bringing the result ever closer to the mental vision of the new creation, or to the real properties of a real-world object</p>
    <p>...Starting with exemplars that themselves have consistency of style ensures that such consistency is the designer's to lose.</p>
    <span class="author">Frederick Brooks - <a href="http://www.amazon.com/The-Design-Essays-Computer-Scientist/dp/0201362988" target="_blank">The Design of Design</a><span>
  </blockquote>
  <p>Components in Semantic UI are designed around the principle of <a href="https://books.google.com/books?id=0qG4TQi-e-4C&pg=PT234&lpg=PT234&dq=%22progressive+truthfulness%22+frederick+brooks&source=bl&ots=yrjNc6wnz8&sig=PJoYODuRku2A1kBoFOPfn4iGYnc&hl=en&sa=X&ved=0CCIQ6AEwAGoVChMImdSMpIOVxgIVCx-sCh3EQgBu#v=onepage&q=%22progressive%20truthfulness%22%20frederick%20brooks&f=false">progressive truthfulness</a>. The default theme is designed as a starting-off point for honing in on a unique style.</p>
  <p>Components in the default theme uses neutral greyscale colors, and a highly legible, free sans-serif web fonts <a href="http://www.latofonts.com"><code>Lato</code></a>.</p>

  <h3 class="ui header">Variables</h3>

  <p>Developers can incrementally adjust the look and feel of components by adjusting the underyling <a href="http://lesscss.org/features/#variables-feature" target="_blank">CSS variables</a>.</p>
  <p>CSS variables describe all the arbitrary, modifiable parts of a component's design. Instead of having to create UI components from a blank canvas, developers only need to specify how their components differ from the base theme.</p>
  <p>For example Semantic UI includes thirteen named colors by default, all components with <code>color variations</code> inherit these global variables when defining how colors should appear.</p>

  <p>Most websites however should use a different definition of how these colors should be. A developer can achieve this, by adding variables to a <code>site theme</code>, special variables which apply specifically to their website.</p>

  <div class="ui ignored code" data-type="less" data-less="true" data-title="site/globals/site.variables">
@primaryColor: @pink;
@secondaryColor: @grey;
@red    : #B03060;
@orange : #FE9A76;
@yellow : #FFD700;
@olive  : #32CD32;
@green  : #016936;
@teal   : #008080;
@blue   : #0E6EB8;
@violet : #EE82EE;
@purple : #B413EC;
@pink   : #FF1493;
@brown  : #A52A2A;
@grey   : #A0A0A0;
@black  : #000000;
  </div>

  <button class="ui primary button">
    Primary Button
  </button>
  <button class="ui secondary button">
    Secondary Button
  </button>
  <div class="ui horizontal divider">All Colors</div>
  <button class="ui red button">Red</button>
  <button class="ui orange button">Orange</button>
  <button class="ui yellow button">Yellow</button>
  <button class="ui olive button">Olive</button>
  <button class="ui green button">Green</button>
  <button class="ui teal button">Teal</button>
  <button class="ui blue button">Blue</button>
  <button class="ui violet button">Violet</button>
  <button class="ui purple button">Purple</button>
  <button class="ui pink button">Pink</button>
  <button class="ui brown button">Brown</button>
  <button class="ui grey button">Grey</button>
  <button class="ui black button">Black</button>


  <!---
  <h3 class="ui header">Inheritance</h3>
  <p>Variables contain three separate levels of inheritance.</p>

  <div class="ui three steps">
    <div class="step">
      <i class="lock icon"></i>
      <div class="content">
        <div class="title">Defaults</div>
        <div class="description">UI Defaults</div>
      </div>
    </div>
    <div class="step">
      <i class="download icon"></i>
      <div class="content">
        <div class="title">Packaged Theme</div>
        <div class="description">Packagable Component</div>
      </div>
    </div>
    <div class="step">
      <i class="user icon"></i>
      <div class="content">
        <div class="title">Site Theme</div>
        <div class="description">Per-Site Changes</div>
      </div>
    </div>
  </div>

  <h3>Site Themes</h3>
  <p>Site themes, which were discussed in the last section are the last value to be applied to a component definition.

   Packaged themes are given names, and must be included inside of the project's theme folder. Site themes, which are the last level of inheritance, are unique to a user's website, and are included in a separate directory <code>site/</code>.</p>

  <h3 class="ui header">Theming Examples</h3>

  <p>Theme variables adjust all physical aspects of a component. Variables can use css values, reference other component variables, or use site-wide default variables: things like <code>@red</code>, <code>@borderColor</code> or <code>@medium</code>, which are used across component definitions.</p>


  <h3 class="ui header">Creating a Theme</h3>

  <p>Themes are made up of two files a <code>.variables</code> file and a <code>.overrides</code> file.

  <p>A <code>.variables</code> file specifies variables which should be adjusted for a theme.</p>


  <p>An <code>.overrides</code> file specifies additional css rules which should be applied for a theme. These css rules can also access css variables.</p>


  <h3 class="ui header">Theme Inheritance</h3>

  <div class="example">
    <div data-type="element" data-element="button" class="ui large floating dropdown theme button">
      <span class="text">Select Theme</span>
      <i class="dropdown icon"></i>
      <div class="menu ui transition hidden" tabindex="-1">
        <div data-value="Default" class="item">Semantic UI</div>
        <div data-value="Amazon" class="item">Amazon</div>
        <div data-value="Material" class="item">Google Material</div>
        <div data-value="GitHub" class="item">GitHub</div>
        <div data-value="Bootstrap3" class="item">Bootstrap</div>
        <div data-value="Twitter" class="item">Twitter</div>
        <div class="divider"></div>
        <div data-value="Raised" class="item">Raised</div>
        <div data-value="Chubby" class="item">Chubby</div>
        <div data-value="Classic" class="item">Classic</div>
      </div>
    </div>
    <div class="ui button">Button</div>
  </div>
  !-->
</div>